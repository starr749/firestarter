"use strict";angular.module("firestarterApp",["ngAnimate","ngAria","ngCookies","ngMessages","ngResource","ngRoute","ngSanitize","ngTouch","ui.select","actions"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/dow",{templateUrl:"views/dow.html",controller:"DowCtrl",controllerAs:"dow"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).otherwise({redirectTo:"/"})}]),angular.module("firestarterApp").controller("MainCtrl",["$scope",function(a){var b=this;b.action={},b.player1int="",b.player2int="";var c=function(a){return-1!==["Avoid"].indexOf(a.name)?"Skill vs Speed":-1!==["Block"].indexOf(a.name)?"Skill vs Skill":-1!==["Counterstrike"].indexOf(a.name)?"Skill vs Def from Skill":-1!==["Run Screaming"].indexOf(a.name)?"Std Skill Test: Ob = 1/2 Spd":-1!==["Swoon"].indexOf(a.name)?"Special":"Std Skill Test: Ob 1"},d=function(a){return-1!==["Avoid"].indexOf(a.name)?"Skill vs Speed":-1!==["Counterstrike"].indexOf(a.name)?"Skill vs Def from Skill":-1!==["Run Screaming"].indexOf(a.name)?"Std Skill Test: Ob = 1/2 Spd":-1!==["Swoon"].indexOf(a.name)?"Special":"Std Skill Test: Ob 1"},e=function(a){return-1!==["Great Strike","Strike","Beat","Throw"].indexOf(a.name)?"Speed vs Skill":-1!==["Disarm"].indexOf(a.name)?"Spd + (Ob = Skill) vs Skill":-1!==["Charge/Tackle"].indexOf(a.name)?"Spd vs Pow + 1D":-1!==["Lock","Push"].indexOf(a.name)?"Spd vs Pow":-1!==["Swoon"].indexOf(a.name)?"Special":"-"},f=function(a){return-1!==["Strike","Beat"].indexOf(a.name)?"Skill vs Skill":-1!==["Disarm"].indexOf(a.name)?"Skill + (Ob = Skill) vs Skill":-1!==["Lock","Push"].indexOf(a.name)?"Skill vs Pow":-1!==["Swoon"].indexOf(a.name)?"Special":"-"},g=function(a){return-1!==["Great Strike","Strike","Beat","Lock","Push"].indexOf(a.name)?"Def from Skill vs Skill":-1!==["Disarm"].indexOf(a.name)?"Defense + (Ob = Skill) vs Skill":-1!==["Lock","Push"].indexOf(a.name)?"Def from Skill vs Pow":-1!==["Swoon"].indexOf(a.name)?"Special":"-"},h=function(a){return-1!==["Avoid"].indexOf(a.name)?"Skill vs Speed":-1!==["Block","Feint"].indexOf(a.name)?"Skill vs Skill":-1!==["Counterstrike"].indexOf(a.name)?"Skill vs Def from Skill":-1!==["Disarm"].indexOf(a.name)?"Skill vs Def from Skill":-1!==["Swoon"].indexOf(a.name)?"Special":-1!==["Stand and Droll","Fall Prone","Run Screaming"].indexOf(a.name)?"Std Skill Test: Ob 1":"Std Skill Test: Ob = 1/2 Skill"},i=function(a){return-1!==["Feint"].indexOf(a.name)?"Skill vs Skill":-1!==["Block","Avoid"].indexOf(a.name)?"Skill vs Spd +(Ob = Skill)":-1!==["Counterstrike"].indexOf(a.name)?"Skill vs Def. + (Ob = Skill)":-1!==["Disarm","Lock","Push","Throw"].indexOf(a.name)?"Std Skill Test: Ob = Skill":-1!==["Beat"].indexOf(a.name)?"Skill vs Skill + (Ob = Skill)":-1!==["Swoon"].indexOf(a.name)?"Special":-1!==["Stand and Droll","Fall Prone"].indexOf(a.name)?"Std Skill Test: Ob 1":-1!==["Run Screaming"].indexOf(a.name)?"Std Skill Test: Ob = 1/2 Skill":"Std Skill Test: Ob = Skill"},j=function(a){return-1!==["Block","Counterstrike"].indexOf(a.name)?"Std Skill Test: Ob 1":-1!==["Beat","Disarm","Feint"].indexOf(a.name)?"Skill vs Skill":-1!==["Swoon"].indexOf(a.name)?"Special":"-"},k=function(a){return-1!==["Avoid"].indexOf(a.name)?"Pow +1D vs Spd":-1!==["Block","Counterstrike","Beat"].indexOf(a.name)?"Std Pow Test: +1D Ob= 1/2 Spd":-1!==["Charge/Tackle"].indexOf(a.name)?"Pow +1D vs Pow +1D":-1!==["Push"].indexOf(a.name)?"Pow +1D vs Pow":-1!==["Throw"].indexOf(a.name)?"Pow +1D vs Skill":-1!==["Stand & Drool","Fall Prone"].indexOf(a.name)?"Std Pow Test +1D: Ob 1":-1!==["Run Screaming"].indexOf(a.name)?"Power + 1D vs Speed":-1!==["Swoon"].indexOf(a.name)?"Special":"Std Pow Test: +1D Ob= 1/2 For"},l=function(a){return-1!==["Avoid"].indexOf(a.name)?"Pow vs Spd":-1!==["Block","Disarm"].indexOf(a.name)?"Pow vs Skill":-1!==["Counterstrike"].indexOf(a.name)?"Pow vs Def. from Skill":-1!==["Lock"].indexOf(a.name)?"Pow vs Pow":-1!==["Stand & Drool","Fall Prone"].indexOf(a.name)?"Std Pow Test: Ob 1":-1!==["Run Screaming"].indexOf(a.name)?"Power vs Agility":-1!==["Swoon"].indexOf(a.name)?"Special":"Std Pow Test: Ob= 1/2 Pow"},m=function(a){return-1!==["Avoid"].indexOf(a.name)?"Pow vs Spd":-1!==["Block"].indexOf(a.name)?"Pow vs Skill":-1!==["Disarm"].indexOf(a.name)?"Std Pow Test: Ob= ½ Pow":-1!==["Counterstrike"].indexOf(a.name)?"Pow vs Def. from Skill":-1!==["Charge/Tackle"].indexOf(a.name)?"Pow vs Pow +1D":-1!==["Push"].indexOf(a.name)?"Pow vs Pow":-1!==["Throw"].indexOf(a.name)?"Pow vs Skill":-1!==["Stand & Drool","Fall Prone"].indexOf(a.name)?"Std Pow Test +1D: Ob 1":-1!==["Run Screaming"].indexOf(a.name)?"Power vs Speed":-1!==["Swoon"].indexOf(a.name)?"Special":"Std Pow Test: Ob= 1/2 Spd"},n=function(a){return-1!==["Avoid"].indexOf(a.name)?"Pow vs Spd":-1!==["Block"].indexOf(a.name)?"Skill vs Skill":-1!==["Beat","Disarm"].indexOf(a.name)?"Std Skill Test: Ob= 1/2 Agi":-1!==["Counterstrike"].indexOf(a.name)?"Skill vs Def. from Skill":-1!==["Charge/Tackle"].indexOf(a.name)?"Skill vs Pow +1D":-1!==["Push","Lock"].indexOf(a.name)?"Skill vs Pow":-1!==["Throw"].indexOf(a.name)?"Skill vs Skill":-1!==["Stand & Drool","Fall Prone"].indexOf(a.name)?"Std Pow Test +1D: Ob 1":-1!==["Run Screaming"].indexOf(a.name)?"Skill vs Speed":-1!==["Swoon"].indexOf(a.name)?"Special":"Std Pow Test: Ob= 1/2 Spd"},o=function(a){return"Perception Test (according to intent and task)"},p=function(a){return"Physical actions typically use Power (to rip something open), Agility (to grab something) or Speed (to vault something)."},q=function(a){return"Throwing skill. lt's an Ob 2 test to hit plus disadvantages from vying for position, weather and light."},r=function(a){return"A player may spend actions aiming a loaded and ready weapon—a knife in the ha11d, nocked and drawn bow, a loaded gun, etc. Each action spent gives a +1D advantage. Characters may aim for as many actions as half their Perception exponent rounded up. When aiming with a crossbow, gun or thrown weapon, script your Aim actions first, then script your Throw or Fire actions. When aiming a bow, put your Aim actions after your Nook and Draw actions, before you script Release."},s=function(a){return"This extended action readies your bow to shoot. Each type of bow has a different load time: Hunting bow, 5 actions; Elven bow, 5 actions; Great bow, 7 actions. To hit your target, script the Release action after Nook and Draw."},t=function(a){return"Firearms or Crossbow skill as appropriate. lt's an Ob 2 test to hit with a gun (plus disadvantages for vying for position, light and weather)."},u=function(a){return"Std Bow skill Test: Ob = l (plus disadvantages)."},v=function(a){return"Snapshot is an Ob 4 test for the Bow, Crossbow, Firearms, or Throwing skill."},w=function(a){return"Sorcery or appropriate spell-casting skill after the sorcerer has spent the prerequisite actions casting the spell. Ob depends on spell description."},x=function(a){return"Intimidation Ob = Will."};b.actions=[{id:1,name:"Strike",category:"Attack Actions",resolveFunction:c,test:"Your Weapon, Brawling, or Boxing",restrictions:"",effect:"Successes over the obstacle or margin of success in versus tests are used to increase damage and target a specific location. See the weapons chapter for instructions on doing damage. You can onlyStrike consecutively a number of times equal to your weapon speed.If you're alternating between different weapons, use the lower weapon speed."},{id:2,name:"Great Strike",category:"Attack Actions",resolveFunction:d,test:"Your Weapon, Brawling or Boxing",restrictions:""},{id:3,name:"Avoid",category:"Defense Actions",resolveFunction:e},{id:4,name:"Block",category:"Defense Actions",resolveFunction:f},{id:5,name:"Counterstrike",category:"Defense Actions",resolveFunction:g},{id:6,name:"Assess",category:"Basic Fighting Actions",resolveFunction:o},{id:7,name:"Change Stance",category:"Basic Fighting Actions",resolveFunction:function(a){return"-"}},{id:8,name:"Charge/Tackle",category:"Basic Fighting Actions",resolveFunction:k},{id:9,name:"Draw Weapon",category:"Basic Fighting Actions",resolveFunction:function(a){return"-"}},{id:10,name:"Get Up",category:"Basic Fighting Actions",resolveFunction:function(a){return"-"}},{id:11,name:"Lock",category:"Basic Fighting Actions",resolveFunction:l},{id:12,name:"Push",category:"Basic Fighting Actions",resolveFunction:m},{id:13,name:"Physical Action",category:"Basic Fighting Actions",resolveFunction:p},{id:14,name:"Beat",category:"Special Fighting Actions",resolveFunction:h},{id:15,name:"Disarm",category:"Special Fighting Actions",resolveFunction:i},{id:16,name:"Feint",category:"Special Fighting Actions",resolveFunction:j},{id:17,name:"Throw Person",category:"Special Fighting Actions",resolveFunction:n},{id:18,name:"Aim",category:"Shooting and Throwing Actions",resolveFunction:r},{id:19,name:"Fire Gun/Crossbow",category:"Shooting and Throwing Actions",resolveFunction:t},{id:20,name:"Nook and Draw",category:"Shooting and Throwing Actions",resolveFunction:s},{id:21,name:"Release Bow",category:"Shooting and Throwing Actions",resolveFunction:u},{id:22,name:"Snapshot",category:"Shooting and Throwing Actions",resolveFunction:v},{id:23,name:"Throw Weapon",category:"Shooting and Throwing Actions",resolveFunction:q},{id:24,name:"Cast Spell",category:"Magic Actions",resolveFunction:w},{id:25,name:"Drop Spell",category:"Magic Actions",resolveFunction:function(a){return"-"}},{id:26,name:"Command Spirit",category:"Magic Actions",resolveFunction:function(a){return"-"}},{id:27,name:"Sing, Howl, Pray",category:"Magic Actions",resolveFunction:function(a){}},{id:28,name:"Command",category:"Social Actions",resolveFunction:function(a){return"-"}},{id:29,name:"Intimidate",category:"Social Actions",resolveFunction:x},{id:30,name:"Fall Prone",category:"Hesitation Actions",resolveFunction:function(a){return"-"}},{id:31,name:"Run Screaming",category:"Hesitation Actions",resolveFunction:function(a){return"-"}},{id:32,name:"Stand & Drool",category:"Hesitation Actions",resolveFunction:function(a){return"-"}},{id:33,name:"Swoon",category:"Hesitation Actions",resolveFunction:function(a){return"-"}}],a.update=function(){void 0!==b.p1Action&&void 0!==b.p2Action&&(a.player1int=b.p1Action.selected.resolveFunction(b.p2Action.selected),a.player2int=b.p2Action.selected.resolveFunction(b.p1Action.selected))}}]),angular.module("firestarterApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("firestarterApp").controller("DowCtrl",["$scope","$http","ACTIONS",function(a,b,c){var d=this;d.actions=c.dow,d.player1int="",d.player2int="",a.update=function(){void 0!==d.p1Action&&void 0!==d.p2Action&&(a.player1act=d.p1Action.selected,a.player2act=d.p2Action.selected)}}]),function(){var a=angular.module("actions",[]);a.constant("ACTIONS",{dow:[{id:1,name:"Point",category:"Verbal Attack Actions",tests:"Coarse Persuasion, Interrogation, Oratory, Persuasion, Poisonous Platitudes, Rhetoric, Stentorious Debate",speaking:"The Point action is the main attack of the verbal duelist. Hammer away using your statement of purpose and related points!",effects:"In a standard test, subtract your Point successes from your opponent’s body of argument. In a versus test, subtract the margin of success from your opponent’s body of argument.",special:""},{id:2,name:"Dismiss",category:"Verbal Attack Actions",tests:"Coarse Persuasion,Command, Intimidation, Oratory, Religious Diatribe, Rhetoric, Stentorious Debate, Ugly Truth",speaking:"This maneuver is used for the cataclysmic and undeniable conclusion of your argument. Loudly declare that your opponent knows nothing about the topic at hand and furthermore, he’s a fool and a dullard and shouldn’t be listened to any further!",special:"If a character fails to win the duel via his Dismiss action, he must hesitate for his next volley. Either cross off the next action, or skip the first volley of the coming exchange."},{id:3,name:"Avoid the Topic",category:"Verbal Defense Actions",tests:"Will",speaking:"The speaking player must veer off topic, even to the point of sounding desperate or ridiculous.",effects:"Avoid successes are subtracted from your opponent’s Point, Obfuscate, or Incite successes. This reduces the effectiveness of an incoming point. If Obfuscate or Incite successes aren’t reduced to zero, the the incoming action wins and takes effect.",special:""},{id:4,name:"Obfuscate",category:"Verbal Defense Actions",tests:"Falsehood, Oratory, Poisonous Platitudes, Rhetoric, Soothing Platitudes, Stentorious Debate, Suasion, Ugly Truth",speaking:"Obfuscate is a verbal block, The player attempting to Obfuscate must present some non sequitur or bizarre, unrelated point in an attempt to confuse or disract his opponent. Obfuscate is spoken while your opponent is speaking",effects:"Avoid successes are subtracted from your opponent’s Point, Obfuscate, or Incite successes. This reduces the effectiveness of an incoming point. If Obfuscate or Incite successes aren’t reduced to zero, the the incoming action wins and takes effect.",special:"Obfuscate is tested versus everything, even itself. If the Obfuscator wins, the victim of this tactic loses his current action. If the Obfuscator exceeds his obstacle, his opponent also suffers a +1 Ob to his next action. If the Obfuscator loses the versus test, his opponent’s current action goes off and his successes are applied as per his action description. Furthermore, he gains +1D to his next action."},{id:5,name:"Rebuttal",category:"Verbal Defense Actions",tests:"Extortion, Interrogation, Oratory, Persuasion, Poisonous Platitudes, Rhetoric, Stentorious Debate, Persuasion",speaking:"The player first lets his opponent make his attack. He then refutes the arguments made while making a fresh point himself.",effects:"Successes from the defense roll are subtracted from the opponent’s successes. To fully defend against an Obfuscate action, you must get more defense successes that your opponent’s Obfusctate successes. Each success on the attacking portion of a Rebuttal reduces your opponent’s body of argument.",special:"When making a Rebuttal, you must divide your dice between attack and defense. This division happens before your opponent rolls. You must put at least one die in each pool. Any penalties to the action are applied to both pools. Any bonuses to the action are applied to either attack or defense."},{id:6,name:"Feint",category:"Special Verbal Actions",tests:"Extortion, Falsehood, Interrogation, Persuasion, Poisonous Platitudes, Religious Diatribe, Rhetoric, Soothing Platitudes, Seduction",speaking:"Using a Feint, the speaker leads his opponent into a trap. He lures him to think he is discussing one point, until his hidden barb is revealed.",effects:"Feint can be used to bypass Rebuttal and to attack Feint, Incite and Obfuscate. In a standard test, each success subtracts from your opponent’s body of argument. In a versus test, margin of success is subtracted from your opponent’s body of argument.",special:""},{id:7,name:"Incite",category:"Special Verbal Actions",tests:"Coarse Persuasion, Command, Extortion, Falsehood, Intimidation, Seduction, Ugly Truth",speaking:"With an acid tongue and biting wit, a character may attempt to distract or dismay his opponent. The speaking player must pronounce an outright insult to his opponent.",effects:"In a standard test, the obstacle is equal to the victim’s Will exponent. If the Inciting player passes the standard test or wins the versus test, the victim must make a Steel test. If the victim hesitates, he misses his next action. However, if the Incite fails, the margin of failure is added as advantage dice to the opponent’s next test.",special:""}]})}(),angular.module("firestarterApp").run(["$templateCache",function(a){a.put("views/about.html",'<p>Quick Tool developed for <a href="https://www.burningwheel.com/">The Burning Wheel</a> </p>'),a.put("views/dow.html",'<div class="jumbotron"> <h1>Fight!</h1> <p class="lead"> A quick Burning Wheel Duel of Wits Resolution Tool. </p> <!--<p><a class="btn btn-lg btn-success" ng-href="#/">Splendid!<span class="glyphicon glyphicon-ok"></span></a></p>--> </div> <div class="row marketing"> <div class="col-sm-6"> <h4>Player 1</h4> <ui-select ng-model="dow.p1Action.selected" ng-disabled="dow.disabled" ng-change="update(dow.p1Action.selected, dow.p2Action.selected)" style="min-width: 300px" title="Choose an Action"> <ui-select-match placeholder="Select an Action...">{{$select.selected.name}}</ui-select-match> <ui-select-choices group-by="\'category\'" repeat="action in dow.actions | filter: $select.search"> <div ng-bind-html="action.name | highlight: $select.search"></div> </ui-select-choices> </ui-select> </div> <div class="col-sm-6"> <h4>Player 2</h4> <ui-select ng-model="dow.p2Action.selected" ng-disabled="dow.disabled" ng-change="update(dow.p2Action.selected, dow.p1Action.selected)" style="min-width: 300px" title="Choose an Action"> <ui-select-match placeholder="Select an Action...">{{$select.selected.name}}</ui-select-match> <ui-select-choices group-by="\'category\'" repeat="action in dow.actions | filter: $select.search"> <div ng-bind-html="action.name | highlight: $select.search"></div> </ui-select-choices> </ui-select> </div> </div> <div class="row marketing"> <div class="col-sm-6"> <h5>Resulting Player 1 Interaction</h5> <div class="well"> <p>{{player1act}}</p> </div> </div> <div class="col-sm-6"> <h5>Resulting Player 2 Interaction</h5> <div class="well"> <p>{{player2act}}</p> </div> </div> </div>'),a.put("views/main.html",'<div class="jumbotron"> <h1>Fight!</h1> <p class="lead"> A quick Burning Wheel Fight! Resolution Tool. </p> <!--<p><a class="btn btn-lg btn-success" ng-href="#/">Splendid!<span class="glyphicon glyphicon-ok"></span></a></p>--> </div> <div class="row marketing"> <div class="col-sm-6"> <h4>Player 1</h4> <ui-select ng-model="main.p1Action.selected" ng-disabled="main.disabled" ng-change="update(main.p1Action.selected, main.p2Action.selected)" style="min-width: 300px" title="Choose an Action"> <ui-select-match placeholder="Select an Action...">{{$select.selected.name}}</ui-select-match> <ui-select-choices group-by="\'category\'" repeat="action in main.actions | filter: $select.search"> <div ng-bind-html="action.name | highlight: $select.search"></div> </ui-select-choices> </ui-select> </div> <div class="col-sm-6"> <h4>Player 2</h4> <ui-select ng-model="main.p2Action.selected" ng-disabled="main.disabled" ng-change="update(main.p2Action.selected, main.p1Action.selected)" style="min-width: 300px" title="Choose an Action"> <ui-select-match placeholder="Select an Action...">{{$select.selected.name}}</ui-select-match> <ui-select-choices group-by="\'category\'" repeat="action in main.actions | filter: $select.search"> <div ng-bind-html="action.name | highlight: $select.search"></div> </ui-select-choices> </ui-select> </div> </div> <div class="row marketing"> <div class="col-sm-6"> <h5>Resulting Player 1 Interaction</h5> <div class="well"> <p>{{player1int}}</p> </div> </div> <div class="col-sm-6"> <h5>Resulting Player 2 Interaction</h5> <div class="well"> <p>{{player2int}}</p> </div> </div> </div>')}]);